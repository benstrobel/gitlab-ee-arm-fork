include:
  - local: '/.gitlab/ci/common.gitlab-ci.yml'

.review-docs:
  image: "${RUBY_IMAGE}-alpine"
  stage: post-test
  cache: {}
  needs: []
  before_script:
    - gem install gitlab --no-doc
    # We need to download the script rather than clone the repo since the
    # review-docs-cleanup job will not be able to run when the branch gets
    # deleted (when merging the MR).
    - apk add --update openssl
    - wget https://gitlab.com/gitlab-org/gitlab/-/raw/master/scripts/trigger-build.rb
    - chmod 755 trigger-build.rb
  variables:
    GIT_STRATEGY: none
    DOCS_REVIEW_APPS_DOMAIN: docs.gitlab-review-app
  allow_failure: true
  rules:
    - if: '$PIPELINE_TYPE == "GITLAB_BRANCH_TEST_PIPELINE"'
      when: manual
    - if: '$PIPELINE_TYPE == "GITLAB_MR_PIPELINE"'
      when: manual
    - if: '$PIPELINE_TYPE == "DOCS_PIPELINE"'
      when: manual

# Trigger a docs build in gitlab-docs
# Useful to preview the docs changes live
# https://docs.gitlab.com/ee/development/documentation/index.html#previewing-the-changes-live
review-docs-deploy:
  extends:
    - .review-docs
  environment:
    name: review-docs/branch-${CI_COMMIT_REF_SLUG}
    # DOCS_REVIEW_APPS_DOMAIN and DOCS_GITLAB_REPO_SUFFIX are CI variables
    # Discussion: https://gitlab.com/gitlab-org/gitlab-foss/merge_requests/14236/diffs#note_40140693
    auto_stop_in: 2 weeks
    url: http://${DOCS_BRANCH}-${DOCS_GITLAB_REPO_SUFFIX}-${CI_COMMIT_REF_SLUG}.${DOCS_REVIEW_APPS_DOMAIN}/${DOCS_GITLAB_REPO_SUFFIX}
    on_stop: review-docs-cleanup
  script:
    - ./trigger-build.rb docs deploy

# Cleanup remote environment of gitlab-docs
review-docs-cleanup:
  extends:
    - .review-docs
  environment:
    name: review-docs/branch-${CI_COMMIT_REF_SLUG}
    action: stop
  script:
    - ./trigger-build.rb docs cleanup

yard:
  extends: .gems-cache
  image: "${RUBY_IMAGE}"
  stage: check
  needs: []
  before_script:
    # These jobs will not be run on dev, so we set ALTERNATIVE_SOURCES to true
    # so tests run fine on forks
    - export ALTERNATIVE_SOURCES="true";
    - !reference [.install-gems]
  script:
    - bundle exec yardoc
  rules:
    - if: '$PIPELINE_TYPE =~ /_TEST_PIPELINE$/'
    - if: '$PIPELINE_TYPE =~ /_MR_PIPELINE$/'
    - if: '$PIPELINE_TYPE == "LICENSE_PAGE_UPDATE_PIPELINE"'
  artifacts:
    expire_in: 1 week
    paths:
      - yard/*
