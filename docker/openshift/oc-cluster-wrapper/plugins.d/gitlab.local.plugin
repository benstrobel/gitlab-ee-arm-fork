#!/bin/bash
# Every plugin needs to have:
# - A help method describing what the plugin does
# - An execute method that will have the logic of the plugin, or any other method
#   that will be called by name, with all the parameters passed to the plugin
#
# If the plugin provides different functions, they can be called by name.
# As an example:
#   myplugin.plugin description
#
#   myplugin.plugin add-user <username> <role>
#
#   myplugin.plugin execute
#

function gitlab.describe {
  echo "Prepare permissions and storage for the GitLab idea-to-production demo"
}

function gitlab.help {
   echo ""
}

function gitlab.install {
  status &> /dev/null  || error_exit "There's no cluster running"

  local __project=${1:-"gitlab"}

  # Prepull the images
  oc import-image gitlab-ce:8.13.0 --from=docker.io/ayufan/gitlab-i2p:latest --confirm
  oc import-image gitlab-ce-redis:3.2.3 --from=docker.io/redis:3.2.3-alpine --confirm
  oc import-image gitlab-ce-postgresql:9.4 --from=docker.io/centos/postgresql-94-centos7:latest --confirm
  oc import-image gitlab-ce-runner:1.7.0 --from=docker.io/gitlab/gitlab-runner:alpine-v1.7.0-rc.2 --confirm

  oc adm policy add-scc-to-group anyuid system:authenticated --as=system:admin
  create-volume pv-${__project}-01
  create-volume pv-${__project}-02
  create-volume pv-${__project}-03
  create-volume pv-${__project}-04
  create-volume pv-${__project}-05
  create-volume pv-${__project}-06
  echo "User permissions and storage have been provisioned for ${__project}. You can find the GitLab template for the demo here: https://gitlab.com/gitlab-org/omnibus-gitlab/raw/i2ptest/docker/openshift/idea-2-prod-template.json"
  echo "When configuring the parameters for the template, use hostnames:"
  echo "gitlab.$(domainSuffix)"
  echo "mattermost.$(domainSuffix)"
}

function gitlab.uninstall {
    local __project=${1:-"gitlab"}

    for resource in pv/pv-${__project}-01 \
      pv/pv-${__project}-02 pv/pv-${__project}-03 pv/pv-${__project}-04 pv/pv-${__project}-05 pv/pv-${__project}-06;
    do
      oc delete $resource -n ${__project} --as=system:admin
    done
}

gitlab.describe
