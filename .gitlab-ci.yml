# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- check
- prepare
- tests
- post-test
- update-cache
- package
- image
- scan-dependencies
- staging_upload
- package-and-image-release
- validate
- metrics
- slow_jobs
- raspbian-release
- aws-marketplace-release
- notification_fail
- trigger-package
- trigger-docker
- trigger-ha-validate
- trigger-qa
workflow:
  rules:
  - if: $CI_PROJECT_NAME == "omnibus-gitlab-mirror" && $CI_PIPELINE_SOURCE == "push"
    when: never
  - if: "$CI_COMMIT_BRANCH =~ /^[0-9]+-[0-9]+-auto-deploy-[0-9]+$/"
    when: never
  - if: $TOP_UPSTREAM_SOURCE_PROJECT == "gitlab-org/gitlab"
    variables:
      CACHE_EDITION: GITLAB
  - if: "$CI_COMMIT_BRANCH =~ /^.*-stable$/"
    variables:
      CACHE_EDITION: STABLE
  - if: $ee == "true" || $GITLAB_VERSION =~ /^*-ee/ || $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+\+[^
      ]{7,}\.[^ ]{7,}$/ || $CI_COMMIT_TAG =~ /^.*ee\.\d.*$/ || $CI_COMMIT_BRANCH =~
      /^.*-ee$/
    variables:
      CACHE_EDITION: EE
  - if: "$CI_COMMIT_BRANCH"
    when: always
  - if: "$CI_COMMIT_TAG"
    when: always
default:
  tags:
  - gitlab-org
variables:
  BUILDER_IMAGE_REGISTRY: registry.gitlab.com/gitlab-org/gitlab-omnibus-builder
  PUBLIC_BUILDER_IMAGE_REGISTRY: registry.gitlab.com/gitlab-org/gitlab-omnibus-builder
  BUILDER_IMAGE_REVISION: 3.3.1
  ASSET_REGISTRY: "${CI_REGISTRY}"
  ASSET_SYNC_EXISTING_REMOTE_FILES: keep
  ASSET_SYNC_GZIP_COMPRESSION: 'true'
  ASSET_PATH: assets-${CI_COMMIT_REF_SLUG}
  COMPILE_ASSETS: 'false'
  RUBY_IMAGE: ruby:2.7
  BUNDLE_PATH__SYSTEM: 'false'
  AUTO_DEPLOY_TAG_REGEX: "^\\d+\\.\\d+\\.\\d+\\+[^ ]{7,}\\.[^ ]{7,}$"
  AUTO_DEPLOY_ENVIRONMENT: pre
  OMNIBUS_GITLAB_MIRROR_ID: '14588374'
  DOCS_GITLAB_REPO_SUFFIX: omnibus
  CACHE_KEY_SUFFIX: "-v1"
  CACHE_EDITION: CE
  QA_BRANCH: master
  ISSUE_BOT_LABELS_EXTRA: group::distribution
".docker_job":
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
  services:
  - name: docker:20.10.2-dind
    alias: localhost
  tags:
  - gitlab-org-docker
before_script:
- export CE_ONLY=(Raspberry)
- export EE_ONLY=(SLES RAT)
- for job in "${CE_ONLY[@]}"; do if [[ "${CI_JOB_NAME}" =~ ${job} ]]; then if ./support/is_gitlab_ee.sh;
  then echo "EE build found. ${CI_JOB_NAME} is run only on CE builds"; exit 0 ; fi;
  fi; done
- for job in "${EE_ONLY[@]}"; do if [[ "${CI_JOB_NAME}" =~ ${job} ]]; then if ! ./support/is_gitlab_ee.sh;
  then echo "CE build found. ${CI_JOB_NAME} is run only on EE builds"; exit 0 ; fi;
  fi; done
- echo $NIGHTLY
- mkdir -p ~/.ssh
- mkdir -p ~/.aws
- mkdir -p cache
- if [ -n "$DEV_GITLAB_SSH_KEY" ]; then echo "$DEV_GITLAB_SSH_KEY" > ~/.ssh/id_rsa;
  cp support/known_hosts ~/.ssh/known_hosts; chmod -R 0600 ~/.ssh/; fi
- bundle config set --local path 'gems'
- bundle config set --local without 'rubocop'
- if [ "$INCLUDE_PACKAGECLOUD" = "true" ]; then bundle config set --local with 'packagecloud';
  fi
- if [ -n "${OMNIBUS_GEM_SOURCE}" ]; then git clone --branch "$(cat OMNIBUS_GEM_VERSION)"
  "${OMNIBUS_GEM_SOURCE}" .bundle/local-omnibus; bundle config --local local.omnibus
  .bundle/local-omnibus; bundle config --local disable_local_branch_check true; fi
- echo -e "section_start:`date +%s`:bundle_install[collapsed=true]\r\e[0Kbundle install
  -j $(nproc)"
- bundle install -j $(nproc)
- echo -e "section_end:`date +%s`:bundle_install\r\e[0K"
- bundle binstubs --all
- if [ -n "$NIGHTLY" ]; then export STAGING_REPO=nightly-builds; export FIPS_STAGING_REPO=nightly-fips-builds;
  fi
fetch-assets:
  extends: ".docker_job"
  stage: prepare
  timeout: 1 hour
  before_script: []
  script:
  - export VERSION=${GITLAB_REF_SLUG-$(ruby -I. -e 'require "lib/gitlab/version";
    puts Gitlab::Version.new("gitlab-rails").print')}
  - support/fetch_assets "${VERSION}"
  artifacts:
    paths:
    - "${ASSET_PATH}"
  rules:
  - if: $COMPILE_ASSETS == "true"
    when: never
  - if: "$DEPS_PIPELINE"
    when: never
  - if: "$AUTO_DEPLOY_COMPILE_ASSETS && $CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+\\+[^
      ]{7,}\\.[^ ]{7,}$/"
    when: never
  - if: $CI_PROJECT_PATH == "gitlab/omnibus-gitlab"
  - if: $CI_PIPELINE_SOURCE == "pipeline" && $CI_PROJECT_PATH == "gitlab-org/build/omnibus-gitlab-mirror"
  - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_PROJECT_PATH == "gitlab-org/build/omnibus-gitlab-mirror"
generate-facts:
  stage: prepare
  image: "${BUILDER_IMAGE_REGISTRY}/ruby_docker:${BUILDER_IMAGE_REVISION}"
  script:
  - bundle exec rake build:generate_facts
  artifacts:
    paths:
    - build_facts
    reports:
      dotenv: build_facts/env_vars
  rules:
  - if: "$DEPS_PIPELINE || $DEPENDENCY_SCANNING"
    when: never
  - if: $CACHE_UPDATE && $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: "$CI_BRANCH_NAME =~ /^[0-9]+-[0-9]+-auto-deploy-[0-9]+$/"
    when: never
  - when: always
  needs: []
include:
- local: "/gitlab-ci-config/gitlab-com.yml"
  rules:
  - if: $CI_SERVER_HOST == "gitlab.com"
- local: "/gitlab-ci-config/dev-gitlab-org.yml"
  rules:
  - if: $CI_SERVER_HOST == "dev.gitlab.org"
- template: Security/Dependency-Scanning.gitlab-ci.yml
".notify":
  before_script:
  - apk add --no-cache curl
  image: alpine
  stage: notification_fail
notify:slack-fail:
  extends:
  - ".notify"
  script:
  - ./support/notify_slack.sh "#g_distribution" "Build on \`$CI_COMMIT_REF_NAME\`
    failed! See <https://dev.gitlab.org/gitlab/omnibus-gitlab/pipelines/"$CI_PIPELINE_ID">"
  when: on_failure
  only:
  - master@gitlab-org/omnibus-gitlab
  - "/.*-stable(-ee)?$/@gitlab-org/omnibus-gitlab"
  except:
  - triggers@gitlab-org/omnibus-gitlab
  dependencies: []
notify:slack-fail:scheduled-master:
  extends:
  - ".notify"
  script:
  - ./support/notify_slack.sh "#qa-master" "☠️ Scheduled omnibus-build against master
    failed! ☠️ See $CI_PIPELINE_URL (triggered from $TOP_UPSTREAM_SOURCE_JOB)"
  only:
    refs:
    - pipelines@gitlab-org/build/omnibus-gitlab-mirror
    variables:
    - "$TOP_UPSTREAM_SOURCE_JOB && $TOP_UPSTREAM_SOURCE_REF == 'master'"
  when: on_failure
issue-bot:
  stage: notification_fail
  image: registry.gitlab.com/gitlab-org/distribution/issue-bot:latest
  script: "/issue-bot"
  rules:
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PROJECT_PATH == "gitlab-org/omnibus-gitlab"
    when: on_failure
